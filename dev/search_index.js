var documenterSearchIndex = {"docs":
[{"location":"#LazyImports.jl-1","page":"LazyImports.jl","title":"LazyImports.jl","text":"","category":"section"},{"location":"#","page":"LazyImports.jl","title":"LazyImports.jl","text":"","category":"page"},{"location":"#","page":"LazyImports.jl","title":"LazyImports.jl","text":"Modules = [LazyImports]","category":"page"},{"location":"#LazyImports.@lazy_import-Tuple{Any}","page":"LazyImports.jl","title":"LazyImports.@lazy_import","text":"@lazy_import Module\n@lazy_import Module = UUID\n\nConstruct a module-like object for Module.  Accessing Module.f imports Module and then get f from Module.  The UUID can be omitted if Module is listed in [deps] or [extras] of Project.toml file of the package using @lazy_import.\n\n\n\n\n\n","category":"macro"},{"location":"#LazyImports.@shim_import-Tuple{Any}","page":"LazyImports.jl","title":"LazyImports.@shim_import","text":"@shim_import Module\n@shim_import Module = UUID\n\nThis acts like @lazy_import except that Module.f works only if Module is already loaded.\n\n\n\n\n\n","category":"macro"}]
}
